(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[4],{2514:function(e,t,a){"use strict";var n=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("section",{staticClass:"page-header"},[a("div",{staticClass:"donate"},[a("a",{attrs:{href:e.donateUrl,target:"_blank",title:"Donate"}},[a("i",{staticClass:"fas fa-heart",staticStyle:{color:"red"}})])]),a("div",{staticClass:"project-name"},[e._v(e._s(e.title))]),a("div",{staticClass:"project-tagline"},[e._v(e._s(e.tagline))]),a("q-btn",{staticClass:"btn",attrs:{type:"a",href:e.locationUrl,target:"_blank",label:"View on GitHub","no-caps":"",flat:""}}),a("q-btn",{staticClass:"btn",attrs:{to:"/docs",label:"Docs","no-caps":"",flat:""}}),a("q-btn",{staticClass:"btn",attrs:{to:"/examples",label:"Examples","no-caps":"",flat:""}}),e.hasInteractiveDemo?a("q-btn",{staticClass:"btn",attrs:{to:"/demo",label:"Interactive Demo","no-caps":"",flat:""}}):e._e(),a("q-btn",{staticClass:"btn",attrs:{type:"a",href:e.donateUrl,target:"_blank",label:"Donate","no-caps":"",flat:""}}),a("div",{staticClass:"row justify-evenly items-center q-ma-sm"},[a("div",{staticClass:"quasar"},[e._v(e._s(e.quasarDesc))]),a("div",{staticClass:"byline"},[e._v(e._s(e.byline)),a("a",{attrs:{href:e.bylineTwitter,target:"_blank",title:"Twitter"}},[a("i",{staticClass:"fab fa-twitter"})])])])],1),a("main",{staticClass:"flex flex-start justify-center inset-shadow"},[a("div",{staticClass:"q-pa-md col-12-sm col-8-md col-6-lg inset-shadow",staticStyle:{width:"100%",height:"3px"}}),a("div",{staticClass:"q-pa-md col-12-sm col-8-md col-6-lg shadow-1",staticStyle:{"max-width":"800px",width:"100%"}},[e._t("default")],2)])])},s=[],o={name:"Hero",data:function(){return{title:"QVerticalExpansionItem",tagline:"Vertical Expansion tab panels for your Quasar App",byline:"Created and maintained by Jeff Galbraith",bylineTwitter:"https://twitter.com/jgalbraith64",quasarDesc:"A Quasar Framework Component and App Extension",locationUrl:"https://github.com/hawkeye64/quasar-ui-qverticalexpansionitem",donateUrl:"https://github.com/sponsors/hawkeye64",hasInteractiveDemo:!1}}},i=o,r=a("2877"),l=a("eebe"),p=a.n(l),c=a("9c40"),d=Object(r["a"])(i,n,s,!1,null,null,null);t["a"]=d.exports;p()(d,"components",{QBtn:c["a"]})},4564:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://hawkeye64.github.io/quasar-ui-qverticalexpansionitem/docs"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"value":{"type":["Number","String","Array"],"desc":"Model of the component defining current tab panel name, or if `multiple` props is used, **must** be an array; Either use this property (along with a listener for \'input\' event) OR use v-model directive","examples":["v-model=\\"selectedPanels\\""],"category":"model"},"multiple":{"type":"Boolean","desc":"When true, turns on the ability to have more the one tab panel visible at a time. In this case, the `v-model` can only be an array of names that contains the opened tab panels","examples":["v-model=\\"selectedPanels\\""],"category":"behavior"},"active-color":{"type":"String","desc":"The [Quasar Color Palette](https://quasar.dev/style/color-palette) color to be attributed to the titlebar text of the active tab panel","examples":["primary","teal-10"],"category":"style"},"active-bg-color":{"type":"String","desc":"The [Quasar Color Palette](https://quasar.dev/style/color-palette) color to be attributed to the titlebar background of the active tab panel","examples":["primary","teal-10"],"category":"style"},"inactive-color":{"type":"String","desc":"The [Quasar Color Palette](https://quasar.dev/style/color-palette) color to be attributed to the titlebar text of the inactive tab panel","examples":["primary","teal-10"],"category":"style"},"inactive-bg-color":{"type":"String","desc":"The [Quasar Color Palette](https://quasar.dev/style/color-palette) color to be attributed to the titlebar background of the inactive tab panel","examples":["primary","teal-10"],"category":"style"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"flat":{"type":"Boolean","desc":"Applies a \'flat\' design (no default shadow)","category":"style"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}},"methods":{"isOpened":{"desc":"Check if the specified tab is open","params":{"name":{"type":["Number","String"],"desc":"The name of the tab pane"}},"examples":["isOpen(\'tab-1\')"],"returns":{"type":"Boolean","desc":"Returns true if the tab panel is opened, otherwise false"}},"openTab":{"desc":"Opens the specified tab panel only if it does not have the property `disable` set to true on the tab panel","params":{"name":{"type":["Number","String"],"desc":"The name of the tab panel to open"}},"examples":["openTab(\'tab-1\')"],"returns":{"type":"Boolean","desc":"Returns true if the tab panel was opened, otherwise false"}},"closeTab":{"desc":"Closes the specified tab panel","params":{"name":{"type":["Number","String"],"desc":"The name of the tab panel to close"}},"examples":["closeTab(\'tab-1\')"]}}}')},"8b24":function(e,t,a){"use strict";a.r(t);var n=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("hero",[a("q-markdown",{attrs:{src:e.markdown,toc:""},on:{data:e.onToc}}),a("json-api-viewer",{attrs:{title:"QVerticalExpansionGroup API",json:e.json}}),a("json-api-viewer",{attrs:{title:"QVerticalExpansionItem API",json:e.json2}}),a("q-markdown",[e._v("\n# Donate\nIf you appreciate the work that went into this, please consider donating to [Quasar](https://donate.quasar.dev) or [Jeff](https://github.com/sponsors/hawkeye64).\n\n---\n\nThis page created with [QMarkdown](https://quasarframework.github.io/quasar-ui-qmarkdown), another great Quasar App Extension.\n    ")]),a("q-page-scroller",{attrs:{position:"bottom-right","scroll-offset":150,offset:[18,18]}},[a("q-btn",{class:{"text-black bg-grey-4":e.$q.dark.isActive,"text-white bg-primary":!e.$q.dark.isActive},attrs:{fab:"",icon:"keyboard_arrow_up"}})],1)],1)},s=[],o=a("2514"),i='QVerticalExpansionItem\n===\n\n**QVerticalExpansionItem** along with **QVerticalExpansionGroup** are components for managing a group of Vertical Expansion tab panels in your Quasar application.\n\n# Installation Types\n\n## Quasar CLI\n\n**App Extension**\n\n:::\n#### Install\n\nTo add as an App Extension to your Quasar application, run the following (in your Quasar app folder):\n```\nquasar ext add qverticalexpansionitem\n```\n\n#### Uninstall\n\nTo remove as an App Extension from your Quasar application, run the following (in your Quasar app folder):\n```\nquasar ext remove qverticalexpansionitem\n```\n\n#### Describe\nWhen installed as an App Extension, you can use `quasar describe QVerticalExpandionItem` or `quasar describe QVerticalExpandionGroup`\n:::\n\n**OR**:\n\n:::\nCreate and register a boot file:\n\n```js\nimport Vue from \'vue\'\nimport Plugin from \'quasar-ui-qverticalexpansionitem\'\nimport \'quasar-ui-qverticalexpansionitem/dist/index.css\'\n\nVue.use(Plugin)\n```\n:::\n\n**OR**:\n\n:::\n```html\n<style src="quasar-ui-qverticalexpansionitem/dist/index.css"></style>\n\n<script>\nimport { QVerticalExpansionItem, QVerticalExpansionGroup } from \'quasar-ui-qverticalexpansionitem\'\n\nexport default {\n  components: {\n    QVerticalExpansionItem,\n    QVerticalExpansionGroup\n  }\n}\n<\/script>\n```\n:::\n\n## Vue CLI project\n\n:::\n```js\nimport Vue from \'vue\'\nimport Plugin from \'quasar-ui-qverticalexpansionitem\'\nimport \'quasar-ui-qverticalexpansionitem/dist/index.css\'\n\nVue.use(Plugin)\n```\n:::\n\n**OR**:\n\n:::\n```html\n<style src="quasar-ui-qverticalexpansionitem/dist/index.css"></style>\n\n<script>\nimport { QVerticalExpansionItem, QVerticalExpansionGroup } from \'quasar-ui-qverticalexpansionitem\'\n\nexport default {\n  components: {\n    QVerticalExpansionItem,\n    QVerticalExpansionGroup\n  }\n}\n<\/script>\n```\n:::\n\n## UMD variant\n\nExports `window.QVerticalExpansionItem`.\n\nAdd the following tag(s) after the Quasar ones:\n\n:::\n```html\n<head>\n  \x3c!-- AFTER the Quasar stylesheet tags: --\x3e\n  <link href="https://cdn.jsdelivr.net/npm/quasar-ui-qverticalexpansionitem/dist/index.min.css" rel="stylesheet" type="text/css">\n</head>\n<body>\n  \x3c!-- at end of body, AFTER Quasar script(s): --\x3e\n  <script src="https://cdn.jsdelivr.net/npm/quasar-ui-qverticalexpansionitem/dist/index.umd.min.js"><\/script>\n</body>\n```\nIf you need the RTL variant of the CSS, then go for the following (instead of the above stylesheet link):\n```html\n<link href="https://cdn.jsdelivr.net/npm/quasar-ui-qverticalexpansionitem/dist/index.rtl.min.css" rel="stylesheet" type="text/css">\n```\n:::\n\n## Testing on Codepen\n[UMD Example on Codepen](https://codepen.io/Hawkeye64/pen/wvBKVNB)\n\n# Docs\nCan be found [here](https://hawkeye64.github.io/quasar-ui-qverticalexpansionitem).\n\n# Examples\nCan be found [here](https://hawkeye64.github.io/quasar-ui-qverticalexpansionitem/examples).\n\n# Demo (source) Project\nCan be found [here](https://github.com/hawkeye64/quasar-ui-qverticalexpansionitem/tree/master/demo).\n\n~~~',r=a("4564"),l=a("ae41"),p={name:"PageIndex",components:{Hero:o["a"]},data:function(){return{markdown:i,json:r,json2:l}},computed:{toc:{get:function(){return this.$store.state.common.toc},set:function(e){this.$store.commit("common/toc",e)}}},methods:{onToc:function(e){e.push({id:"QVerticalExpansionGroup-API",label:"QVerticalExpansionGroup API",level:1,children:Array(0)}),e.push({id:"QVerticalExpansionItem-API",label:"QVerticalExpansionItem API",level:1,children:Array(0)}),e.push({id:"Donate",label:"Donate",level:1,children:Array(0)}),this.toc=e}}},c=p,d=a("2877"),u=a("eebe"),h=a.n(u),m=a("5096"),b=a("9c40"),y=Object(d["a"])(c,n,s,!1,null,null,null);t["default"]=y.exports;h()(y,"components",{QPageScroller:m["a"],QBtn:b["a"]})},ae41:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://hawkeye64.github.io/quasar-ui-qverticalexpansionitem/docs"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"value":{"type":"Boolean","desc":"Model of the component defining it\'s current state (opened or closed); Either use this property (along with a listener for \'input\' event) OR use v-model directive","examples":["v-model=\\"selectedPanels\\""],"category":"model"},"name":{"type":["Number","String"],"desc":"A unique value used to identify this tab panel","examples":["name=\\"panel-1\\""],"category":"model"},"label":{"type":"String","desc":"The label to be displayed in the titlebar","examples":["label=\\"The Title\\""],"category":"content"},"separator":{"type":"Boolean","desc":"If true, a separator is displayed between the titlebar and the slotted content","category":"style"},"icon":{"type":"String","desc":"If set, displays an icon in the titlebar","examples":["icon=\\"calendar_today\\""],"category":"style"},"icon-size":{"type":"String","desc":"The size to be used for icons","default":"sm","values":["xs","sm","md","lg","xl"],"category":"style"},"expand-icon":{"type":"String","desc":"If set, displays an icon to be used for expand","examples":["expandIcon=\\"expand_more\\""],"category":"style"},"expanded-icon":{"type":"String","desc":"If set, displays an icon to be used for expanded","examples":["expandedIcon=\\"expand_less\\""],"category":"style"},"click-icon":{"type":"Boolean","desc":"If true, then only the expand/expanded icons can be used to open/close the tab panel instead of the titlebar","category":"style"},"align":{"type":"String","desc":"Used for the alignment of the label on the titlebar","default":"left","values":["left","center","right"],"category":"style"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"tabindex":{"type":["Number","String"],"desc":"Tabindex HTML attribute value","examples":["0","100"],"category":"general"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"},"icon":{"desc":"Slot for replacing the icon"},"label":{"desc":"Slot for replacing the label"}},"scopedSlots":{"titlebar":{"desc":"Scoped Slot for replacing the titlebar","scope":{"icon":{"type":"String","desc":"The icon of the current tab panel"},"label":{"type":"String","desc":"The label of the current tab panel"},"opened":{"type":"Boolean","desc":"true if the current tab panel is opened"},"expand":{"type":"String","desc":"The expand icon of the current tab panel"},"expanded":{"type":"String","desc":"The expanded icon of the current tab panel"}}}},"methods":{"isOpen":{"desc":"Checks to see if the tab panel is open","examples":["isOpen()"],"returns":{"type":"Boolean","desc":"Returns true if the tab panel is opened, otherwise false"}},"open":{"desc":"Opens the tab panel only if it does not have the property `disable` set to true onthe tab panel","examples":["open()"],"returns":{"type":"Boolean","desc":"Returns true if the tab panel was opened, otherwise false"}},"close":{"desc":"Closes the tab panel","examples":["close()"]},"toggle":{"desc":"Toggles the tab panel","examples":["toggle()"]}}}')}}]);